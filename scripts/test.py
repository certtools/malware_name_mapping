#!/usr/bin/env python3
# -*- coding: utf-8 -*-
import re
import sys

from common import find_mapping, load_mapping

for filename in ('mapping.csv', 'malpedia.csv'):
    filename = find_mapping(filename=filename)

    error = False
    with open(filename) as handle:
        for line in handle.readlines():
            if not re.match('^("\^[^"]*\$",([a-z]+\.)?[0-9a-z/_-]*,(.*)?$|#)', line):
                print("Line does not match defined format: %r." % line, file=sys.stderr)
                error = True
if error:
    sys.exit(1)

expressions = [line[:2] for line in load_mapping(include_malpedia=True)]

error = False
erroneous = [False] * len(expressions)
for _, family in expressions:
    family_match = False
    for index, (expression, other_family) in enumerate(expressions):
        if erroneous[index]:
            continue
        try:
            if re.fullmatch(expression, family):
                if family != other_family:
                    print('Malware family %r matches to another family %r.' % (family, other_family))
                    error = True
                else:
                    family_match = True
        except re.error as exc:
            print('Error parsing expression %r: %r' % (expression, exc))
            error = True
            erroneous[index] = True

    if not family_match:
        print('Family %r is not matched to itself.' % family)
        error = True
if error:
    sys.exit(1)
